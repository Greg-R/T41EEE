#pragma once



class Process {

public:

void ProcessIQData();

char atom, currentAtom;
int8_t first_block = 1;
//uint8_t NB_on = 0;
uint8_t wait_flag;
float32_t audiotmp = 0.0f;
float32_t audioSpectBuffer[1024]{ 0 };  // This can't be DMAMEM.  It will break the S-Meter.  KF5N October 10, 2023
//float32_t* audioSpectBuffer = new float32_t[1024]{0};  // Assign to the heap.  Possibly breaking the S-meter?
float32_t sample_meanL = 0.0;
float32_t sample_meanR = 0.0;
float32_t wold = 0.0f;
float32_t audioGainCompensate = 1.0;

// 12 pole Chebyshev 24KSPS 840HZ Fc CW LPF  // AFP 10-18-22
//   b0                     b1                   b2
float32_t CW_AudioFilterCoeffs1[30] = {
  0.001045672652953040, 0.002091345305906081, 0.001045672652953040, 1.882585857812263620, -0.886768548424075709,  //0
  0.002423227458078301, 0.004846454916156603, 0.002423227458078301, 1.884529132690991200, -0.894222042523304395,  //1
  0.004829291756048423, 0.009658583512096846, 0.004829291756048423, 1.889384468765871410, -0.908701635790065021,  //2
  0.007653393822000297, 0.015306787644000595, 0.007653393822000297, 1.898775913252934710, -0.929389488540935838,  //3
  0.010174875101599359, 0.020349750203198718, 0.010174875101599359, 1.914432845416308200, -0.955132345822705675,  //4
  0.011739876965796040, 0.023479753931592080, 0.011739876965796040, 1.937529526031872560, -0.984489033895056709,  //5
};

// 12 pole Chebyshev 24KSPS 1.08KHZ Fc CW LPF  // AFP 10-18-22
//   b0                     b1                   b2                        -a1                    -a2
float32_t CW_AudioFilterCoeffs2[30] = {
  0.001708601686569496, 0.003417203373138993, 0.001708601686569496, 1.849644394115178780, -0.856478800861456779,  //0
  0.003960135567320385, 0.007920271134640770, 0.003960135567320385, 1.850063728088927160, -0.865904270358208716,  //1
  0.007896110863694851, 0.015792221727389703, 0.007896110863694851, 1.852618721585121530, -0.884203165039901040,  //2
  0.012527469693062619, 0.025054939386125238, 0.012527469693062619, 1.860233461308907320, -0.910343340081157804,  //3
  0.016688500558372531, 0.033377001116745061, 0.016688500558372531, 1.876160539268528550, -0.942914541502018699,  //4
  0.019316527156182765, 0.038633054312365529, 0.019316527156182765, 1.902936487120827410, -0.980202595745558458   //5
};

// 12 pole Chebyshev 24KSPS 1.32KHZ Fc CW LPF  // AFP 10-18-22
//   b0                     b1                   b2                        -a1                    -a2
float32_t CW_AudioFilterCoeffs3[30] = {
  0.002526205346474786, 0.005052410692949571, 0.002526205346474786, 1.816854531214501690, -0.826959352600400766,  //0
  0.005854757343402014, 0.011709514686804028, 0.005854757343402014, 1.814915209210166580, -0.838334238583774649,  //1
  0.011674800234072332, 0.023349600468144664, 0.011674800234072332, 1.813684163704128990, -0.860383364640418424,  //2
  0.018533877701340070, 0.037067755402680140, 0.018533877701340070, 1.817698744288731130, -0.891834255094091533,  //3
  0.024728610789430342, 0.049457221578860684, 0.024728610789430342, 1.832107309882979650, -0.931021753040700895,  //4
  0.028704640967983489, 0.057409281935966977, 0.028704640967983489, 1.861191141633472320, -0.976009705505406111   //5
};

// 12 pole Chebyshev 24KSPS 1.80KHZ Fc CW LPF  // AFP 10-18-22
//   b0                     b1                   b2                        -a1                    -a2
float32_t CW_AudioFilterCoeffs4[30] = {
  0.004619667602890411, 0.009239335205780823, 0.004619667602890411, 1.751482350458491770, -0.769961020870053470,  //0
  0.010697965393132404, 0.021395930786264807, 0.010697965393132404, 1.742463879042789540, -0.785255740615319220,  //1
  0.021310846818856619, 0.042621693637713239, 0.021310846818856619, 1.729488942947587930, -0.814732330223014500,  //2
  0.033824238912754968, 0.067648477825509937, 0.033824238912754968, 1.721199473469051890, -0.856496429120071845,  //3
  0.045209476618282299, 0.090418953236564598, 0.045209476618282299, 1.727486625620660020, -0.908324532093789383,  //4
  0.052728229128958234, 0.105456458257916469, 0.052728229128958234, 1.757051114234371440, -0.967964030750204318   //5
};

// 12 pole Chebyshev 24KSPS 2.0KHZ Fc CW LPF  // AFP 10-18-22
//   b0                     b1                   b2                        -a1                    -a2
float32_t CW_AudioFilterCoeffs5[30] = {
  0.005895699392492981, 0.011791398784985962, 0.005895699392492981, 1.718777480550920830, -0.742360278120892780,  //0
  0.013642906943512292, 0.027285813887024585, 0.013642906943512292, 1.705095001540683390, -0.759666629314732500,  //1
  0.027147671747232219, 0.054295343494464438, 0.027147671747232219, 1.684291091887056610, -0.792881778875985654,  //2
  0.043053647931610858, 0.086107295863221717, 0.043053647931610858, 1.667486185665950420, -0.839700777392394016,  //3
  0.057557746560508744, 0.115115493121017487, 0.057557746560508744, 1.667342067521431660, -0.897573053763466633,  //4
  0.067256465545230904, 0.134512931090461807, 0.067256465545230904, 1.695113706470476880, -0.964139568651400491,  //5
};


//=== CW Filter ===
float32_t CW_AudioFilter1_state[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  // AFP 10-18-22
float32_t CW_AudioFilter2_state[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  // AFP 10-18-22
float32_t CW_AudioFilter3_state[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  // AFP 10-18-22
float32_t CW_AudioFilter4_state[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  // AFP 10-18-22
float32_t CW_AudioFilter5_state[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };  // AFP 10-18-22
//---------  Code Filter instance -----
arm_biquad_cascade_df2T_instance_f32 S1_CW_AudioFilter1 = { 6, CW_AudioFilter1_state, CW_AudioFilterCoeffs1 };  // AFP 10-18-22
arm_biquad_cascade_df2T_instance_f32 S1_CW_AudioFilter2 = { 6, CW_AudioFilter2_state, CW_AudioFilterCoeffs2 };  // AFP 10-18-22
arm_biquad_cascade_df2T_instance_f32 S1_CW_AudioFilter3 = { 6, CW_AudioFilter3_state, CW_AudioFilterCoeffs3 };  // AFP 10-18-22
arm_biquad_cascade_df2T_instance_f32 S1_CW_AudioFilter4 = { 6, CW_AudioFilter4_state, CW_AudioFilterCoeffs4 };  // AFP 10-18-22
arm_biquad_cascade_df2T_instance_f32 S1_CW_AudioFilter5 = { 6, CW_AudioFilter5_state, CW_AudioFilterCoeffs5 };  // AFP 10-18-22
//=== end CW Filter ===
};